Adding node modules => node init
importing file => require('filename')
exporting file => module.export = functionname

Data comes as chunks => collected makes buffer => collected makes complete Data
Like it comes from the input field

You cant write anything else on the dom after returning res.end

createServer takes 2 arguments, Response and Request. They have other features, objects and functions to use

----------------------------------------------------------------------------------------------------------------------->

Express.js 
const app = express(); imports express functionalities to app module

app.use() is a middleware (most important for express)
It always take 3 arguement
If a middleware dont call next, it kills the loop;

Intead of app.use(), we can use app.get() or app.post() as well to check if the user is entering the page with get request or post request

By creating files in the views folder (Name can be anything), and managing them wth javascript in routes folder, I can load specific files at specific routes
Like at url/app/product I can host variable/local/product/123.html

path from express is effecient way to mention paths in these complex folder types

app.use(static('file directory here')) makes a folder public to all. It means that content of that folder will be accesible to anyone

----------------------------------------------------------------------------------------------------------------------->